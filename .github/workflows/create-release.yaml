name: Create Release

on:
  push:
    tags:
      - 'v*'

env:
  BINARY_NAME: berastribute
  TARGET: x86_64-unknown-linux-gnu
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build Binary
    runs-on: ubuntu-22.04
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y pixz

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          submodules: recursive

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ env.TARGET }}
          override: true
          profile: minimal

      - name: Build binary
        run: |
          cargo build --release --target ${{ env.TARGET }}
          cp target/${{ env.TARGET }}/release/${{ env.BINARY_NAME }} .

      - name: Create archive
        run: |
          VERSION=$(echo ${{ github.ref_name }} | sed 's/^v//' | sed 's/\./_/g')
          ARCHIVE_NAME="${BINARY_NAME}-${VERSION}-${TARGET}.txz"
          tar -Ipixz -cf "${ARCHIVE_NAME}" "${BINARY_NAME}"
          echo "ARCHIVE_NAME=$ARCHIVE_NAME" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binary
          path: |
            ${{ env.ARCHIVE_NAME }}
            ${{ env.BINARY_NAME }}

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: binary

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          name: "Berastribute ${{ github.ref_name }}"
          draft: false
          artifacts: |
            ${{ env.BINARY_NAME }}
            ${{ env.ARCHIVE_NAME }}
          body: |
            Berastribute ${{ github.ref_name }}

            ## Binaries
            - Linux (amd64)
